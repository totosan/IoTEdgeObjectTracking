FROM ubuntu as iot-sdk-python-builder

# Update image
SHELL ["/bin/bash", "-c"]

RUN apt-get update && apt-get install -y cmake build-essential curl libcurl4-openssl-dev \
    libssl-dev uuid-dev apt-utils python python-pip python-virtualenv python3 python3-pip python3-virtualenv \
    libboost-python-dev pkg-config valgrind sudo git software-properties-common && \
    rm -rf /var/lib/apt/lists/* 

WORKDIR /usr/sdk

RUN python -m virtualenv --python=python3 env3
RUN source env3/bin/activate && pip install --upgrade pip && pip install -U setuptools wheel

RUN git clone --recursive --branch release_2019_01_03 --depth=1 https://github.com/Azure/azure-iot-sdk-python.git src

# Build for Python 3
RUN add-apt-repository ppa:deadsnakes/ppa -y
RUN source env3/bin/activate && ./src/build_all/linux/setup.sh --python-version 3.6
RUN source env3/bin/activate && ./src/build_all/linux/release.sh --build-python 3.6

# Build for Python 2
#RUN pip install --upgrade pip==10.0.1 && python -m pip install -U setuptools wheel
#RUN ./src/build_all/linux/setup.sh
#RUN ./src/build_all/linux/release.sh

# Build darknet 
FROM ubuntu:18.04 AS darknet-build
RUN apt-get update
RUN apt-get install -y build-essential git

# Get and compile darknet
WORKDIR /src
RUN git clone -n https://github.com/AlexeyAB/darknet.git
WORKDIR /src/darknet
RUN git checkout 4c315ea26b56c2bf20ebc240d94386c6e3cc83db
RUN sed -i -e "s!OPENMP=0!OPENMP=1!g" Makefile && \
    sed -i -e "s!AVX=0!AVX=1!g" Makefile && \
    sed -i -e "s!LIBSO=0!LIBSO=1!g" Makefile && \
    make

FROM ubuntu:18.04

WORKDIR /app

RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
     wget \
     libcurl4-openssl-dev \
     python3-pip \
     libboost-python-dev \
     python python-dev python-pip \
     libgtk2.0-dev \
     libblas-dev \
     liblapack-dev \
     libatlas-base-dev \
     libx11-dev libgtk-3-dev \
     gfortran \
     build-essential cmake \
     python3-setuptools python3-numpy python3-opencv python-opencv && \
    rm -rf /var/lib/apt/lists/* 

COPY --from=iot-sdk-python-builder /usr/sdk/src/device/doc/package-readme.md /src/device/doc/package-readme.md
COPY --from=iot-sdk-python-builder /usr/sdk/src/build_all/linux/release_device_client /src/build_all/linux/release_device_client 
RUN cd /src/build_all/linux/release_device_client && python3 setup.py install
COPY --from=iot-sdk-python-builder /usr/sdk/src/device/samples/iothub_client.so /app/iothub_client.so

COPY --from=darknet-build /src/darknet/libdarknet.so /app/libdarknet.so

COPY /build/requirements.txt ./

RUN apt-get update && apt-get install -y git

RUN pip3 install --upgrade pip

RUN pip3 install \
tornado==4.5.3 \
trollius \
scipy \
numpy \
imutils \
dlib

RUN pip3 install -v -r requirements.txt

RUN apt-get update && \
    apt-get install -y --no-install-recommends zip pandoc && \
    rm -rf /var/lib/apt/lists/*

RUN git clone --depth=1 https://github.com/ytdl-org/youtube-dl.git && \
    cd youtube-dl && \
    make && \
    make install

RUN pip3 install ptvsd

ADD /app/ .


# Expose the port
EXPOSE 80

ENTRYPOINT [ "python3", "-u", "./main_debug.py" ]
