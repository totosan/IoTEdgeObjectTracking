FROM iotcontainertt.azurecr.io/jetson-tensorflow:0.1.0 as compile-image

SHELL ["/bin/bash", "-c"]

RUN apt -y update && DEBIAN_FRONTEND=noninteractive apt install -y cmake build-essential curl libcurl4-openssl-dev \
    libssl-dev uuid-dev apt-utils python python-pip python-virtualenv python3 python3-pip python3-virtualenv \
    libboost-python-dev pkg-config valgrind sudo git software-properties-common \
    libjpeg62-dev libopenjp2-7 libtiff5 libatlas-base-dev && \
    rm -rf /var/lib/apt/lists/* 

RUN export PYTHONPATH=/usr/lib/python2.7/dist-packages
RUN python -m virtualenv --python=python3.6 env3 --system-site-packages
RUN source env3/bin/activate && pip install --upgrade pip && pip install -U setuptools wheel

RUN pip3 install absl-py six protobuf wrapt gast astor termcolor keras_applications keras_preprocessing --no-deps
RUN pip3 install numpy --no-deps
RUN pip3 install flask pillow

COPY requirements.txt ./
RUN pip3 install -r requirements.txt

FROM iotcontainertt.azurecr.io/jetson-tensorflow:0.1.0 as build-image

COPY app /app
COPY --from=compile-image /usr/local/lib/python3.6/dist-packages /usr/local/lib/python3.6/dist-packages
COPY --from=compile-image /env3 /env3
COPY --from=compile-image /root/.cache/pip/wheels /root/.cache/pip/wheels


SHELL ["/bin/bash", "-c"]

# Expose the port
EXPOSE 80

# Set the working directory
WORKDIR /app

RUN source /env3/bin/activate
RUN pip3 install ptvsd

# Run the flask server for the endpoints
CMD python3 main.py
