FROM arm64v8/python:3.6-slim

SHELL ["/bin/bash", "-c"]

RUN pip3 install flask pillow onnxruntime
RUN pip3 install ptvsd

COPY app /app
# Set the working directory
WORKDIR /app

# Expose the port
EXPOSE 80 5679

# Run the flask server for the endpoints
CMD OPENBLAS_CORETYPE=ARMV8 python3 app.py


#docker build  --rm -f "c:\Temp\IoTEdgeObjectTracking\modules\YoloModule\Dockerfile.debug.arm64v8" -t iotcontainertt.azurecr.io/yolomodule:latest-debug-arm64v8 "c:\Temp\IoTEdgeObjectTracking\modules\YoloModule" ; if ($?) { docker push iotcontainertt.azurecr.io/yolomodule:latest-debug-arm64v8 } if ($?) { docker buildx build --platform=linux/arm64/v8 --rm -f "c:\Temp\IoTEdgeObjectTracking\modules\PostcarDetector\Dockerfile.debug.arm64" -t iotcontainertt.azurecr.io/postcardetector:latest-debug-arm64v8 --load "c:\Temp\IoTEdgeObjectTracking\modules\PostcarDetector" } if ($?) { docker push iotcontainertt.azurecr.io/postcardetector:latest-debug-arm64v8 } if ($?) { docker build  --rm -f "c:\Temp\IoTEdgeObjectTracking\modules\SpeechModule\arm64v8.debug.Dockerfile" -t iotcontainertt.azurecr.io/speechmodule:latest-arm64v8.debug "c:\Temp\IoTEdgeObjectTracking\modules\SpeechModule" } if ($?) { docker push iotcontainertt.azurecr.io/speechmodule:latest-arm64v8.debug }